#compdef dot neato twopi circo fdp sfdp patchwork
# zsh completions for the dot command line applications
# Copyright © 2017 Henrik Lindgren
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.

local args engine
__parseopts() {
  engine=$words[1]
  zparseopts -D -- K:=engine G*layout\==engine
  return $engine
}

_arguments ':input file:_files'\
  '(- 1 :)-V[prints version information and exits]'\
  '(-O -o)-o-[Write output to file]:outputfile:_files'\
  '(- 1 :)-?[prints the usage and exits]'\
  '-c[configure plugins writes \$prefix/lib/graphviz/config]'\
  '*-E-[a default edge attribute. Example\: -Gsize="7,8" -Nshape=box -Efontsize=]:edge attributes:->edgeattribute'\
  '*-G-[a default graph attribute]:graph attributes:->graph'\
  '-K-[overide the default layout engine implied by the command name]:layout engine:->engine'\
  '-l[use external library custom PostScript library files]:lib file:_files'\
  '-LC[Set overlap expansion factor]:factor:'\
  '-Lg[Dont use grid]'\
  '-Ln[Set number of iterations to i]:nr:'\
  '-LO[Use old attractive force]'\
  '-LT[Set temperature \(temperature factor\) to v]'\
  '-LU[Set unscaled factor to i]'\
  '-m-[memory test observe no growth with top, kill when done]:iterations:( 1 2 )'\
  '*-N-[a default node attribute]:node:->nodeattribute'\
  '-n-[If set, dot assumes nodes have already been positioned and all nodes have a pos attribute]:nodes:(( \
      1\:"default"\
      2\:"Use node positions as specified, with no adjustment to remove node‐node overlaps"\
    ))'\
  '(-o)-O[generate output filenames based on the input filename and the -T format]'\
  '-P[generate a graph of the currently available plugins]'\
  '-q[level of message suppression. The default is 1]:level:( 1 )'\
  '-s[input by fscale, the default is 72]:scale:( 72 100 50 )'\
  '-T-[output format]:output:->format'\
  '-v[prints various information useful for debugging]'\
  '-x[Reduce graph]'\
  '-y[invert y coordinate in output]'

case "$state" in
  engine)
    local -a engine
    engine=(
      'circo:filter for circular layout of graphs'
      'dot:filter for hierarchical layouts of graphs'
      'fdp:filter for symmetric layouts of graphs'
      'neato:filter for symmetric layouts of graphs'
      'patchwork:filter for tree maps'
      'sfdp:filter for drawing large undirected graphs'
      'twopi:filter for radial layouts of graphs'
    )
    _describe 'layout engine' engine
    return 0
    ;;

  format)
    local formats
    # format=( bmp canon cmap imap cmapx_np dot eps fig gd gd2 gif gtk gv ico imap_np ismap jpe jpeg jpg pdf pic plain plain-ext png pov ps ps2 svg svgz tif tiff tk vml vmlz vrml wbmp x11 xdot xdot1.2 xdot1.4 xlib cmapx )
    formats=(${(ps: :)"$(dot -Txxx /dev/null 2> /dev/stdout )"//*of:/ })
    _describe 'output format' formats
    return 0
    ;;

  graph)
    local -a args graphattributes

    graphattributes=(
        'center=:n a non‐zero value centers the drawing on the page'
        'color=:Sets foreground color bgcolor for background'
        'href=:Default url for image map files in PostScript files, the base URL for all relative URLs, as recognized by Acrobat Distiller 3.0 and up'
        'layout=:engine indicates the preferred layout engine dot, neato, fdp etc overriding the default from the basename of the command or the -K commandline option'
        'margin=:sets the page margin included in the page size'
        'nodesep=:sets the minimum separation between nodes'
        'ordering=:out constrains order of out‐edges in a subgraph according to their file sequence'
        'rank=:same or min or max in a subgraph constrains the rank assignment of its nodes.'
        'rankdir=:LR|RL|BT requests a left‐to‐right, right‐to‐left, or bottom‐to‐top, drawing'
        'ranksep=:f sets the minimum separation between ranks'
        'ratio=:f sets the aspect ratio to f which may be a floating point number, or ( fill compress auto)'
        'rotate=:90 sets landscape mode. orientation=land is backward compatible but obsolete.'
        'size=:x,y specifies the maximum bounding box of drawing in inches'
        'splines=:line true false If set to true, edges are drawn as splines. If set to polyline, edges are drawn as polylines. If set to ortho, edges are drawn'
        'stylesheet=:file.css includes a reference to a stylesheet in -Tsvg and -Tsvgz outputs. Ignored by other formats'
        'URL=:the default url for image map files in PostScript files, the base URL for all relative URLs, as recognized by Acrobat Distiller 3.0 and up'
    )

    case $service in
      neato)
        graphattributes+=(
            'epsilon=:[n.] Sets the cutoff for the solver. The default is 0.1.'
            'start=:[int] Requests random initial placement and seeds the random number generator. If val is not an integer, the process ID or current time is used as the seed'
        )
      ;;
      twopi)
        graphattributes+=(
            'overlap=:If mode is false, the program uses Voronoi dia‐ grams to adjust the nodes to eliminate overlaps. If mode is "scale", the layout is uniformly scaled up, preserving node sizes, until nodes no longer overlap. The latter technique removes overlaps while preserving symmetry and structure, while the former removes overlaps more compactly but destroys symmetries. If mode is "true" (the default), no repositioning is'
            'ranksep=:Specifies the radial distance in inches between the sequence of rings. The default is 0.75'
            'root=:Node to be used as the center of the layout. If not specified, twopi will randomly pick one of the nodes that are furthest from a leaf node, where a leaf node is a node of degree 1. If no leaf nodes exists, an arbitrary node is picked as center'
        )
      ;;
      circo)
        graphattributes+=(
            'mindist=:Minimum separation between all nodes. If not specified then circo uses a default value of 1.0'
            'root=:Name of a node occurring in the root block. If the graph is disconnected, the root node attribute can be used to specify additional root blocks'
        )
      ;;
      fdp)
      graphattributes+=(
        'K=:Sets the default ideal node separation in the layout'
        'maxiter=:Sets the maximum number of iterations used to layout the graph'
        'start=:Adjusts the random initial placement of nodes with no specified position'
      )
      ;;
    esac
    _describe 'graph attributes' graphattributes
    return 0
    ;;

    nodeattribute)
      local nodeattributes
      nodeattributes=(
       'minlen=:n where n is an integer factor that applies to the edge length (ranks for normal edges, or  minimum  node  separation'
       'weight=:n  where n is the integer cost of the edge'
       'label=:text where text may include escaped newlines \\n, \\l, or \\r for centered, left, or right justified lines'
       'fontsize=:n sets the label type size to n points'
       'fontname=:name sets the label font family name'
       'fontcolor=:colorvalue sets the label text color'
       'style=:solid dashed dotted bold invis'
       'color=:colorvalue sets the line color for edges'
       'color=:colorvaluelist a : separated list of colorvalue creates parallel edges, one edge for each color'
       'dir=:forward back both none controls arrow direction'
       'tailclip,headclip=:false disables endpoint shape clipping'
       'href=:"url" sets the url for the node in imagemap, PostScript and SVG files'
       'URL=:"url" sets the url for the node in imagemap, PostScript and SVG files'
       'target=:"target" is a target string for client‐side imagemaps and SVG'
       'tooltip=:"tooltip"  is  a  tooltip  string  for  client‐side  imagemaps  effective when edges have a URL'
       'arrowhead=:none, normal, inv, dot, odot, invdot, invodot, tee, empty, invempty, open, halfopen, diamond, odiamond, box, obox, crow'
       'arrowtail=:none, normal, inv, dot, odot, invdot, invodot, tee, empty, invempty, open, halfopen, diamond, odiamond, box, obox, crow'
       'arrowsize=:(norm_length=10,norm_width=5, inv_length=6,inv_width=7,dot_radius=2)'
       'headlabel=:string for port labels labelfontcolor,labelfontname,labelfontsize for head and tail labels'
       'taillabel=:string for port labels'
       'headhref=:"url" sets the url for the head port in imagemap, PostScript and SVG files'
       'headURL=:"url" sets the url for the head port in imagemap, PostScript and SVG files'
       'headtarget=:"headtarget" is a target string for client‐side imagemaps and SVG, effective when edge heads  have  a  URL'
       'headtooltip=:"tooltip" is a tooltip string for client‐side imagemaps effective when head  ports  have  a  URL'
       'tailhref=:"url" sets the url for the tail port in imagemap, PostScript and SVG files'
       'tailURL=:"url" ("tailURL" is a synonym for "tailhref"'
       'tailtarget=:"tailtarget" is a target string for client‐side imagemaps and SVG, effective when edge tails  have  a  URL'
       'tailtooltip=:"tooltip" is a tooltip string for client‐side imagemaps effective when tail  ports  have  a  URL'
       'samehead:aim edges having the same value to the same port, using the average landing point'
       'sametail:aim edges having the same value to the same port, using the average landing point'
       'constraint=:false causes an edge to be ignored for rank assignment'
       'layer=:id or id:id or "all" sets the edges active layers'
      )
      case $words[1] in
         circo)
           nodeattributes+=(
             'w=:f sets the weight (spring constant) of an edge to the given floating point value.'
           )
         ;;
         fdp)
         nodeattributes+=(
           'pin=If val is "true", the node will remain at its initial position'
         )
      esac
      _describe 'node attributes' nodeattributes
      ;;

    edgeattribute)
      local edgeattributes
      edgeattributes=(
       'color=:colorvalue sets the outline color, and the default fill color'
       'distortion=:sets  the amount of broadening of the top and narrowing of the bottom of the polygon (relative to its orienta‐'
       'fillcolor=:colorvalue  sets  the fill color when style=filled.'
       'fontcolor=:colorvalue sets the label text color.'
       'fontname=:name sets the label font family name.'
       'fontsize=:n sets the label type size to n points.'
       'height=:sets minimum height'
       'href=:sets the url for the node in imagemap, PostScript and SVG files'
       'label=:text  where  text  may include escaped newlines \n, \l, or \r '
       'orientation=:f  sets  the orientation of the first apex of the polygon counterclockwise from the vertical, in degrees.  f may'
       'peripheries=:n sets the number of periphery lines drawn around the polygon.  This value supersedes the  number  of  periphery'
       'regular=:n if n is non‐zero then the polygon is made regular, i.e. symmetric about the x and y axis,  otherwise  the  polygon'
       'shape=:record polygon epsf builtin_shape'
       'sides=:n sets the number of sides to the polygon. n<3 results in an ellipse.  This attribute is ignored by builtin_polygons.'
       'skew=:f sets the amount of right‐displacement of the top and left‐displacement of the bottom of the polygon (relative to  its'
       'style=:filled solid dashed dotted bold invis or any Postscript code'
       'target=:target string for client‐side imagemaps and SVG, effective when nodes have a URL. The target string is'
       'tooltip=:tooltip  string  for  client‐side imagemaps and SVG, effective when nodes have a URL.  The tooltip'
       'URL=:sets the url for the node in imagemap, PostScript and SVG files'
       'width=:sets minimum width'
      )

      case $words[1] in
         circo)
           edgeattributes+=(
             'root=:true/false.  This specifies that the block containing the given node be treated as the root of the spanning tree in the layout'
           )
         ;;
         fdp)
           edgeattributes+=(
             'weight=:f sets the weight of an edge to the given floating point value'
           )
      esac
      _describe 'edge attributes' edgeattributes
      return 0
      ;;
esac

# vim: set ts=2 sw=2 tw=0 ft=zsh expandtab foldenable foldmethod=syntax foldclose=all :
